<!DOCTYPE html>
<html>
	<head>
	<title><%= decision.title %></title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel='stylesheet' href='/stylesheets/style.css' />
	<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">	
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	</head>
	<body>
	<h1 class="input-allowed text-center" id="title"><%= decision.title %> <i class="fa fa-edit"></i></h1>
	<p class="input-allowed text-center" id="subtitle"><%= decision.subtitle %> <i class="fa fa-edit"></i></p>


	<div class="all-criterias-show"></div>
	<div class="all-criterias" id="criterias-pad">
		<% 	for (var i = 0; i < decision.criteria.length; i ++ ){ %>
			<% var crit = decision.criteria[i];
			if (crit.parentId == 'criterias-pad'){
			 %>
			<div class="criteria color-<%= crit.color %>" id="criteria-<%= crit.id %>" draggable="true"><%= crit.title %></div>

			<% }
		} %>
		<div class="criteria new-criteria">+</div>
	</div>	
	<table id="decision-maker" width="100%">
		<thead>
			<tr>
				<th class="disabled" id="choice-heading">Choices</th>
				<% for(var j = 0; j < decision.priorities.length; j++ ){ 
						var priority = decision.priorities[j];


						var critChild = function(element) {
							return element.parentId === 'priority-' + priority.id;
						}



						var child = decision.criteria.find(critChild);

					%>
					<th class="computed-width priority <%= (child) ? 'color-' + child.color : 'empty '; %>" id="priority-<%= priority.id %>">
						<% if (child) { %>
						<div class="criteria color-<%= child.color %>" id="criteria-<%= child.id %>" draggable="true"><%= child.title %></div>
						<% } %>
						<p class="percent"><%= priority.columnWidth %>%</p> 
					</th>
				<% } %>
				<th class="disabled" id="final-heading">Decision</th>
			</tr>
		</thead>
		<tbody>
		<% for (var i =0; i < decision.choices.length; i ++) {
			var choice = decision.choices[i];
		 %>
			<tr class="choice-row" data-choice="<%= i %>">
				<td class="disabled first-col"><p class="input-allowed choice" id="choice-<%= choice.id %>"><%= choice.title %> <i class="fa fa-edit"></i></p><i class="fa fa-trash-o trash-button"></i></td>
				<% for(var j = 0; j < decision.priorities.length; j++ ){
					var priority = decision.priorities[j]; %>
					<td class="result">
						<p class="p-result" data-choice="<%= choice.id %>" data-criteria="<%= priority.id %>" id="criteria-<%= priority.id %>-result-choice-<%= choice.id %>"></p>
						<nav class="rank" data-choice="<%= choice.id %>" data-criteria="<%= priority.id %>">
							<input class="choice" type="radio" name="criteria-<%= priority.id %>-choice-<%= choice.id %>" value="1" id="1-criteria-<%= priority.id %>-choice-<%= choice.id %>" <%= (choice.ranks[j] === 1) ? 'checked' : ''; %>>
							<label for="1-criteria-<%= priority.id %>-choice-<%= choice.id %>">1</label>
							<input class="choice" type="radio" name="criteria-<%= priority.id %>-choice-<%= choice.id %>" value="2" id="2-criteria-<%= priority.id %>-choice-<%= choice.id %>" <%= (choice.ranks[j] === 2) ? 'checked' : ''; %>>
							<label for="2-criteria-<%= priority.id %>-choice-<%= choice.id %>">2</label>
							<input class="choice" type="radio" name="criteria-<%= priority.id %>-choice-<%= choice.id %>" value="3" id="3-criteria-<%= priority.id %>-choice-<%= choice.id %>" <%= (choice.ranks[j] === 3) ? 'checked' : ''; %>>
							<label for="3-criteria-<%= priority.id %>-choice-<%= choice.id %>">3</label>
							<input class="choice" type="radio" name="criteria-<%= priority.id %>-choice-<%= choice.id %>" value="4" id="4-criteria-<%= priority.id %>-choice-<%= choice.id %>" <%= (choice.ranks[j] === 4) ? 'checked' : ''; %>>
							<label for="4-criteria-<%= priority.id %>-choice-<%= choice.id %>">4</label>
							<input class="choice" type="radio" name="criteria-<%= priority.id %>-choice-<%= choice.id %>" value="5" id="5-criteria-<%= priority.id %>-choice-<%= choice.id %>" <%= (choice.ranks[j] === 5) ? 'checked' : ''; %>>
							<label for="5-criteria-<%= priority.id %>-choice-<%= choice.id %>">5</label>
						</nav>
					</td>
				<% } %>
				<td class="disabled"><p class="decision p-result" id="decision-calc-<%= choice.id %>" data-choice="<%= choice.id %>"></p></td>
			</tr>
		<% } %>
			<tr>
				<td class="disabled" id="new-row"></td>
			<% for (var i =0; i < decision.priorities.length; i ++) { %>
				<td></td>
			<% } %>
				<td class="disabled"></td>
			</tr>
		</tbody>
	</table>
	<div class="large-numbers-description">
		<nav class="large-numbers-button">
			<span>Large Numbers are</span>
			<input type="radio" name="large-num" value="good" id="large-good" <%= (decision.largeNumbers ==='good') ? 'checked' : ''; %>>
			<label for="large-good" class="first">Good</label>
			<input type="radio" name="large-num" value="bad" id="large-bad" <%= (decision.largeNumbers ==='good') ? '' : 'checked' ; %>>
			<label for="large-bad">Bad</label>
		</nav>
		<div class="large-numbers-result">
			<p class="large-result <%= (decision.largeNumbers ==='good') ? '' : 'hide-opacity'; %>" id="large-result-good">High Ratings</p>
			<p class="large-result <%= (decision.largeNumbers ==='good') ? 'hide-opacity' : ''; %>" id="large-result-bad">High Costs</p>
		</div>
	</div> 

	<script type="text/javascript" src="/javascripts/jquery.min.js"></script>
	<script type="text/javascript" src="/javascripts/colresizable-1.6.min.js"></script>

	<script>
		$(function(){
			var calculateAllRanks = function() {
				$(".result").each(calculateRank);
			}

			var calculateRank = function(e){
				var width = totalWidth();
				var square = $(this);
				var i = 0;
				while (!square.hasClass('result')  && i < 20) {
					square = square.parent();
					i++;
				}
				
				var valueChecked = parseInt(square.children('.rank').children('input:checked')[0].value);
				square.children('.p-result')[0].innerText = Math.round(square.width() / width * 100 * valueChecked);
				var choice = square.children('.p-result').data('choice');
				var totalRow = 0;
				$('.p-result:not(.decision)[data-choice=' + choice + ']').each(function(){
					totalRow = parseInt(this.innerText) + totalRow;
				})

				$('.decision.p-result[data-choice=' + choice + ']')[0].innerText = totalRow;
			}

			var jsonifyDecison = function(){

			}
			var addChoice = function() {
				var setChildren = function() {
					if ($(this).attr('id')) {
						var id = $(this).attr('id');
						$(this).attr('id', id.substring(0, id.lastIndexOf("-") + 1) + newChoice);
					}
					if ($(this).attr('data-choice') ) {
						$(this).attr('data-choice', newChoice);
						$(this).data('choice', newChoice);
					}
					if ($(this).attr('for') ) {
						var prevFor = $(this).attr('for');
						$(this).attr('for', prevFor.substring(0, prevFor.lastIndexOf("-") + 1) + newChoice);
					}
					if ($(this).attr('name') ) {
						var prevName = $(this).attr('name');
						$(this).attr('name', prevName.substring(0, prevName.lastIndexOf("-") + 1) + newChoice);
					}
					if ($(this).children().length > 0) {
						$(this).children().each(setChildren);
					}
				}

				$('.trash-button').removeClass('disable');
				var newChoice = parseInt($('.choice-row').last().data('choice')) + 1;
				var newRow = $('.choice-row').last().clone(true).insertAfter($('.choice-row').last());
				newRow.attr('data-choice', newChoice);
				newRow.data('choice', newChoice);
				if (newRow.children().length > 0 ) {
					newRow.children().each(setChildren);
				}

			}	

			var deleteChoice = function (event) {
				var row = $(event.target);
				var i = 0;
				while (! row.hasClass('choice-row') && i < 20) {
					row = row.parent();
					i++;
				}
				if ($('.' + row[0].classList[0]).length > 1){
					row.remove();
				} else {
					$('.trash-button').addClass('disable');
				}
			}

			var toggleLargeNumbers = function(){
				$('.large-result').toggleClass('hide-opacity');
			};
			var css2json = function(css) {
			    var s = {};
			    if (!css) return s;
			    if (css instanceof CSSStyleDeclaration) {
			        for (var i in css) {
			        	if (css[i]){
			            if ((css[i]).toLowerCase) {
			                s[(css[i]).toLowerCase()] = (css[css[i]]);
			            }}
			        }
			    } else if (typeof css == "string") {
			        css = css.split("; ");
			        for (var i in css) {
			            var l = css[i].split(": ");
			            s[l[0].toLowerCase()] = (l[1]);
			        }
			    }
			    return s;
			};
			var inputStyle = {
				"-webkit-appearance": "textfield", 
				"user-select": "text", 
				"cursor": "auto", 
				"border-width": "2px", 
				"border-style": "inset", 
				"border-color": "initial", 
				"border-image": "initial", 
				"-webkit-rtl-ordering": "logical", 
				"text-rendering": "auto", 
				"-webkit-writing-mode": "horizontal-tb"
			};

			var allowEdit = function (e){
				while (! e.target.className.includes('input-allowed')) {
					e.target = e.target.parentElement;
				}
				var origTarget = $(e.target);
				var text = origTarget[0].innerText.trim();
				var origCss = window.getComputedStyle(origTarget[0], null);
				var input = origTarget.before('<input class="input-class"/>').siblings('input');
				input
					.val(text)
					.css(css2json(origCss))
					.css(inputStyle)
					.focus(function(){
						$(this).css("outline", "-webkit-focus-ring-color auto 5px");
					})
					.on('keyup', function(e){
					var origTarget = $(e.target).next('.input-allowed');
					if (e.keyCode === 13) {
				        origTarget[0].innerText = $(e.target).val() + ' ';
				        origTarget.append('<i class="fa fa-edit"></i>');
				        $(e.target).remove();
				    }
				});
				// Delete after css applied
				origTarget[0].innerText = '';
			}

			var newcriteria = function(e){
		        var lastId = $('.criteria:not(.new-criteria)').length;
		        var newLastId = 'criteria-' + lastId;
				$('<input class="criteria color-1" id="' + newLastId + '"></>')
					.insertBefore(e.target)
					.on('keyup', function(e){
						if (e.keyCode === 13) {
					        var newDec = $(e.target).val();
					        $('<div class="criteria color-1" id="' + e.target.id + '" draggable="true"></div>').insertBefore(e.target);
				        	$('#'+newLastId).click(cycleColor)
				        		.on("dragstart", dragStart)
				        		.on("touchstart", handleTouch)
				        		.on("touchmove", handleTouch)
				        		.on("touchend", handleTouch)
				        		.on("touchcancel", handleTouch)
				        		[0].innerText = newDec;
					        $(e.target).remove();
					    }
					});
			}

			//finding a class called color-n, cycles to next class color from 1 to numColors
			var cycleColor = function(e) {
				var numColors = <%= numColors %>;
				var element = $(e.currentTarget);
				var colorClass = element.attr("class").match(/color-\d/)[0];
				var currentColor = parseInt(colorClass.substr(colorClass.length - 1));
				if (currentColor === numColors){
					var newColor = 1
				} else {
					var newColor = currentColor + 1;
				}
				element.removeClass(colorClass);
				element.addClass("color-" + String(newColor));
				if (element.parent().attr('class').match(/color-\d/)) {
					element.parent().removeClass(colorClass)
						.addClass("color-" + String(newColor));
				}
			}

			var totalWidth = function(){
				var width = 0;
				$(".computed-width").each(function() {
					width += $(this).width();
				});
				return width;
			};
			// Adds % widths for each column in table with 'computed-width' css classes on headers
			var computeWidths = function(){
				// cannot trust that sum of all columns = width of table due to margin, border, and browser overflow rules
				width = totalWidth();
				$(".computed-width").each(function() {
					$(this).children(".percent").text(String(Math.round($(this).width() / width * 100)) + "%"); 
				});
			};

			//callback for column resizable
			var onSampleResized = function(e){	
				var table = $(e.currentTarget); //reference to the resized table
				computeWidths();
				calculateAllRanks();
			};
			// wrapper handler for Touch events to create drag events
			var handleTouch = function(event){
				event.preventDefault();
				var type, dispatchTarget;
				var touch = event.originalEvent.changedTouches[0];
				switch(event.type){
					case "touchstart": 
						type="dragstart"; 
						dispatchTarget = touch.target;
						break;
					case "touchmove": 
						type="drag"; 
						dispatchTarget = touch.target;
						break;
					case "touchend": 
						var dropSite = document.elementFromPoint(touch.clientX, touch.clientY);
						if (dropSite === event.target){
							dispatchTarget = event.target;
							type="click";
						} else {
							dispatchTarget = dropSite;
							type="drop";
						}
						break;
					default: return;
				}

				var simulatedMouse = document.createEvent("MouseEvent");
				//event.initMouseEvent(type, canBubble, cancelable, view,
    //                  detail (clicks), screenX, screenY, clientX, clientY,
    //                  ctrlKey, altKey, shiftKey, metaKey,
    //                  button (0: Main button pressed), relatedTarget);
				simulatedMouse.initMouseEvent(type, true, true, window, 
					1, touch.screenX, touch.screenY, touch.clientX, touch.clientY,
					false, false, false, false, 0, null);
				dispatchTarget.dispatchEvent(simulatedMouse);

			}
			var dragStart = function(event) {
				if (event.dataTransfer){
					event.dataTransfer.setData("text", event.target.id);
				} else {
					jQuery.Event.data = {"text": event.target.id};
				}
			}
			var dropEvent = function(event){
				event.preventDefault();
			  	event.stopPropagation();
			  	var mydiv = $(event.target);
			  	if (event.dataTransfer){
				    var data = event.dataTransfer.getData("text");
			  	} else {
				    var data = jQuery.Event.data["text"];
			  	}
			    
			    // make sure the target is the outer div - priority or all-criterias
				while (! (mydiv.hasClass('priority') || mydiv.hasClass('all-criterias')) ){
					mydiv = mydiv.parent();
				}

				//priority  = table headers
				//only allow to drop if empty
				if (mydiv.hasClass('priority') && mydiv.hasClass('empty')){
					var dragged = $('#' + data);
					//if being dragged from one column to another
					if (dragged.parent('priority')){
						var colorClass = dragged.attr('class').match(/color-\d/)[0];						
						dragged.parent().addClass('empty')
							.removeClass(colorClass);
					}
					dragged.insertBefore(mydiv.children());
					mydiv.removeClass('empty');
					var colorClass = dragged.attr("class").match(/color-\d/)[0];
					mydiv.addClass(colorClass);
				// if being dragged back to the pool of all criterias
				} else if (mydiv.hasClass('all-criterias')) {
					var dragged = $('#' + data);
					if (dragged.parent().hasClass('priority')) {
						var colorClass = dragged.attr("class").match(/color-\d/)[0];
						dragged.parent().addClass('empty')
							.removeClass(colorClass);
					}
					dragged.insertBefore($('.new-criteria')[0]);
				}
			}
			// initialize column Resizable
			$("#decision-maker").colResizable({
				resizeMode:'fit',
				liveDrag:true,
				postbackSafe:true,
				partialRefresh:true,
				draggingClass:"dragging",
				onResize: onSampleResized,
				disabledColumns: [0],
				onDrag: onSampleResized
			});

			$(document).ready(function(){
				// compute initial column widths
				computeWidths();
				calculateAllRanks();
				// add onclick event to cycle color for all criterias
				$('.criteria').click(cycleColor);
				// make all criterias draggable
				$('.criteria').on("dragstart", dragStart);

				$('.criteria:not(.new-criteria)').on("touchstart", handleTouch);
				$('.criteria:not(.new-criteria)').on("touchmove", handleTouch);
				$('.criteria:not(.new-criteria)').on("touchend", handleTouch);
				$('.criteria:not(.new-criteria)').on("touchcancel", handleTouch);

				// make all-criterias and priority droppable
				$('.all-criterias, .priority').on("drop", dropEvent);
				$('.all-criterias, .priority').on("dragover", function(event){
					event.preventDefault();
					event.stopPropagation();
				});
				$('.input-allowed').on('click', allowEdit);
				$('.new-criteria').off('click', cycleColor);
				$('.new-criteria').on('click', newcriteria);
				$('.all-criterias-show').click(function(e){
					$('.all-criterias').toggleClass('hide');
				});
				$('.large-numbers-button label').click(toggleLargeNumbers);
				$('input[type=radio].choice').change(calculateRank);
				$('#new-row').on('click', addChoice);
				$('.trash-button').click(deleteChoice);

			})
		});
	</script>
	</body>
</html>
