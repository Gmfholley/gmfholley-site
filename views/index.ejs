<!DOCTYPE html>
<html>
	<head>
	<title><%= title %></title>
	<link rel='stylesheet' href='/stylesheets/style.css' />
	<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">	
	</head>
	<body>
	<h1><%= title %></h1>
	<p>Welcome to <%= title %></p>

	<div class="all-decisions" id="decisions-pad">
		<% 	for (var i = 0; i < defaultCriteria.length; i ++ ){ %>
			<div class="decision color-<%= i % 5 + 1 %>" id="decision-<%= i %>" draggable="true"><%= defaultCriteria[i] %></div>

		<% } %>
	</div>
	<table id="sample" width="100%">
		<thead>
			<tr>
				<th class="disabled" id="choice-heading">Choices</th>
				<th class="computed-width priorities empty" id="priority-1"><p class="percent"></p> </th>
				<th class="computed-width priorities empty" id="priority-2"><p class="percent"></p></th>
				<th class="computed-width priorities empty" id="priority-3"><p class="percent"></p></th>
				<th class="computed-width priorities empty" id="priority-4"><p class="percent"></p></th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td class="disabled"><p class="input-allowed">Choice 1</p></td>
				<% for(var j = 0; j < numCriteria; j++ ){ %>
				<td>
					<select>
					<%	for(var i = 1; i <= rankRange; i ++){ %>
						<option value=<%= i %>><%= i %></option>
				
					<% } %>
					</select>
				</td>
				<% } %>
			</tr>
			<tr>
				<td class="disabled"><p class="input-allowed">Choice 2</p</td>
				<td> 5 </td>
				<td> 5 </td>
				<td> 5 </td>
				<td> 5 </td>
			</tr>
		</tbody>
	</table>

	<input id="currentInput" type="text"></input>
	<script type="text/javascript" src="/javascripts/jquery.min.js"></script>
	<script type="text/javascript" src="/javascripts/colresizable-1.6.min.js"></script>
	<script>
		$(function(){
			var allowEdit = function (e){
				var origTarget = $(e.target);
				var text = origTarget[0].innerText;
				origTarget.parent().append('<input class="input-class"/>');
				var input = origTarget.parent().children('input');
				input.val(text);
				origTarget[0].innerText = '';
				input.on('keyup', function(e){
					var origTarget = $(e.target).parent().children('.input-allowed');
					if (e.keyCode === 13) {
				        origTarget[0].innerText = $(e.target).val();
				        $(e.target).remove();
				    }
				});
			}

			//finding a class called color-n, cycles to next class color from 1 to numColors
			var cycleColor = function(e) {
				var numColors = <%= numColors %>;
				var element = $(e.currentTarget);
				var colorClass = element.attr("class").match(/color-\d/)[0];
				var currentColor = parseInt(colorClass.substr(colorClass.length - 1));
				if (currentColor === numColors){
					var newColor = 1
				} else {
					var newColor = currentColor + 1;
				}
				element.removeClass(colorClass);
				element.addClass("color-" + String(newColor));
				if (element.parent().attr('class').match(/color-\d/)) {
					element.parent().removeClass(colorClass);
					element.parent().addClass("color-" + String(newColor));
				}
			}

			// Adds % widths for each column in table with 'computed-width' css classes on headers
			var computeWidths = function(){
				// cannot trust that sum of all columns = width of table due to margin, border, and browser overflow rules
				var totalWidth = 0;

				$(".computed-width").each(function() {
				totalWidth += $(this).width();
				});
				$(".computed-width").each(function() {
					$(this).children(".percent").text(String(Math.round($(this).width() / totalWidth * 100)) + "%"); 
				});
			};

			//callback for column resizable
			var onSampleResized = function(e){	
				var table = $(e.currentTarget); //reference to the resized table
				computeWidths();
			};

			// initialize column Resizable
			$("#sample").colResizable({
				resizeMode:'fit',
				liveDrag:true,
				postbackSafe:true,
				partialRefresh:true,
				draggingClass:"dragging",
				onResize: onSampleResized,
				disabledColumns: [0],
				onDrag: onSampleResized
			});

			$(document).ready(function(){
				// compute initial column widths
				computeWidths();
				// add onclick event to cycle color for all decisions
				$('.decision').click(cycleColor);
				// make all decisions draggable
				$('.decision').on("dragstart", function (event) {
					event.originalEvent.dataTransfer.setData("text", event.target.id);
				});
				// make all-decisions and priorities droppable
				$('.all-decisions, .priorities').on("drop", function(event){
					event.preventDefault();
				  	event.stopPropagation();
				  	var mydiv = event.target;
				    var data = event.originalEvent.dataTransfer.getData("text");
				    
				    // make sure the target is the outer div - priorities or all-decisions
					while (! (mydiv.className.includes('priorities') || mydiv.className.includes('all-decisions'))){
						mydiv = mydiv.parentElement;
					}

					//priorities  = table headers
					//only allow to drop if empty
					if (mydiv.className.includes('priorities') && mydiv.className.includes('empty')){
						var dragged = document.getElementById(data);
						//if being dragged from one column to another
						if (dragged.parentElement.className.includes('priorities')){
							dragged.parentElement.classList.add('empty');
							var colorClass = $(dragged).attr("class").match(/color-\d/)[0];
							dragged.parentElement.classList.remove(colorClass);
						}
						mydiv.insertBefore(dragged, mydiv.children[0]);
						mydiv.classList.remove('empty');
						var colorClass = $(dragged).attr("class").match(/color-\d/)[0];
						mydiv.classList.add(colorClass);

					} else if (mydiv.className.includes('all-decisions')) {
						var dragged = document.getElementById(data);
						if (dragged.parentElement.className.includes('priorities')){
							dragged.parentElement.classList.add('empty');
							var colorClass = $(dragged).attr("class").match(/color-\d/)[0];
							dragged.parentElement.classList.remove(colorClass);
						}
						mydiv.appendChild(dragged);
					}
				    
				});
				$('.all-decisions, .priorities').on("dragover", function(event){
					event.preventDefault();
					event.stopPropagation();
				});
				$('.input-allowed').on('click', allowEdit);
			})
		});
	</script>
	</body>
</html>
